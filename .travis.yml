sudo: required

dist: trusty

services:
  - docker

language: java

# for now we depend upon deprecated CI infrastructure (to keep builds green): https://blog.travis-ci.com/2017-05-04-precise-image-updates
group: deprecated-2017Q1

jdk:
  - oraclejdk7
  - openjdk7
  - oraclejdk8
  - openjdk8

env:
  global:
    - LD_LIBRARY_PATH=/home/db2inst1/sqllib/lib64/
    - DOCKER_COMPOSE_VERSION=1.13.0
    - ORG_GRADLE_PROJECT_env=travis

# https://docs.travis-ci.com/user/languages/java/#Caching
before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -rf $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

before_install:
  - docker --version
  # docker compose (due to need for healthcheck)
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - docker-compose --version

install:
  - docker-compose up & # using rather than 'docker-compose up -d' to see log msgs in console

before_script:
  - wget -O /tmp/wtfc.sh https://raw.githubusercontent.com/typekpb/wtfc/v0.0.1/wtfc.sh && chmod +x /tmp/wtfc.sh
  - /tmp/wtfc.sh -T 0 'docker inspect -f "{{.State.Health.Status}}" p6spy_postgresql_1 | grep -qw healthy'
  - /tmp/wtfc.sh -T 0 'docker inspect -f "{{.State.Health.Status}}" p6spy_mysql_1 | grep -qw healthy'
  - /tmp/wtfc.sh -T 0 'docker inspect -f "{{.State.Health.Status}}" p6spy_mariadb_1 | grep -qw healthy'
  - /tmp/wtfc.sh -T 0 'docker inspect -f "{{.State.Health.Status}}" p6spy_percona_1 | grep -qw healthy'
  - /tmp/wtfc.sh -T 0 'docker inspect -f "{{.State.Health.Status}}" p6spy_firebird_1 | grep -qw healthy'
  - /tmp/wtfc.sh -T 0 'docker inspect -f "{{.State.Health.Status}}" p6spy_mssqlserver_1 | grep -qw healthy'
  - /tmp/wtfc.sh -T 0 'docker inspect -f "{{.State.Health.Status}}" p6spy_oracle_1 | grep -qw healthy'
  - mkdir /tmp/repo && docker cp p6spy_oracle_1:/u01/app/oracle-product/12.1.0/xe/sqldeveloper/jdbc/lib/ojdbc6.jar /tmp/repo

# install: 
#  - mvn -q -B dependency:resolve-plugins --settings ~/.m2/p6spySettings.xml
#  - mvn -q -B dependency:resolve --settings ~/.m2/p6spySettings.xml
 
# script:
# - if [[ $TRAVIS_BRANCH == "master" && $TRAVIS_PULL_REQUEST == "false" && $TRAVIS_JDK_VERSION == "oraclejdk7" ]]; then mvn -B test site:site site:stage com.github.github:site-maven-plugin:site -P travis -Dmaven.test.failure.ignore=true --settings ~/.m2/p6spySettings.xml; else mvn -B test -P travis --settings ~/.m2/p6spySettings.xml; fi;
# - mvn -B test -P travis --settings ~/.m2/p6spySettings.xml;

# jobs:
#   include:
#     - stage: deploy
#       script: [[ $TRAVIS_BRANCH == "master" && $TRAVIS_PULL_REQUEST == "false" ]] 
#       # Keep in mind to overwrite these here
#       jdk: oraclejdk7

# after_success:
# #  - if [[ $TRAVIS_BRANCH == "master" && $TRAVIS_PULL_REQUEST == "false" && $TRAVIS_JDK_VERSION == "oraclejdk7" ]]; then mvn -B deploy -DskipTests --settings ~/.m2/p6spySettings.xml; fi

# notifications:
#  email:
#    - p6spy-developers@googlegroups.com
